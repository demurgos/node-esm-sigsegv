/**
 * @module kryo/writers/structured
 */
/**
 * Base class for `json`, `qs` and `bson` writers.
 */
export class StructuredWriter {
    writeAny(value) {
        return JSON.parse(JSON.stringify(value));
    }
    writeList(size, handler) {
        const result = [];
        for (let index = 0; index < size; index++) {
            result.push(handler(index, this));
        }
        return result;
    }
    writeDocument(keys, handler) {
        const result = {};
        for (const key of keys) {
            result[key] = handler(key, this);
        }
        return result;
    }
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvd3JpdGVycy9zdHJ1Y3R1cmVkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBSUg7O0dBRUc7QUFDSCxNQUFNLE9BQWdCLGdCQUFnQjtJQWFwQyxRQUFRLENBQUMsS0FBVTtRQUNqQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzNDLENBQUM7SUFFRCxTQUFTLENBQUMsSUFBWSxFQUFFLE9BQXdEO1FBQzlFLE1BQU0sTUFBTSxHQUFVLEVBQUUsQ0FBQztRQUN6QixLQUFLLElBQUksS0FBSyxHQUFXLENBQUMsRUFBRSxLQUFLLEdBQUcsSUFBSSxFQUFFLEtBQUssRUFBRSxFQUFFO1lBQ2pELE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQ25DO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELGFBQWEsQ0FDWCxJQUFpQixFQUNqQixPQUFrRDtRQUVsRCxNQUFNLE1BQU0sR0FBUSxFQUFFLENBQUM7UUFDdkIsS0FBSyxNQUFNLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDdEIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDbEM7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDO0NBT0YiLCJmaWxlIjoibGliL3dyaXRlcnMvc3RydWN0dXJlZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQG1vZHVsZSBrcnlvL3dyaXRlcnMvc3RydWN0dXJlZFxuICovXG5cbmltcG9ydCB7IFdyaXRlciB9IGZyb20gXCIuLi9jb3JlXCI7XG5cbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgYGpzb25gLCBgcXNgIGFuZCBgYnNvbmAgd3JpdGVycy5cbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFN0cnVjdHVyZWRXcml0ZXIgaW1wbGVtZW50cyBXcml0ZXI8YW55PiB7XG4gIGFic3RyYWN0IHdyaXRlQm9vbGVhbih2YWx1ZTogYm9vbGVhbik6IGFueTtcblxuICBhYnN0cmFjdCB3cml0ZURhdGUodmFsdWU6IERhdGUpOiBhbnk7XG5cbiAgYWJzdHJhY3Qgd3JpdGVGbG9hdDY0KHZhbHVlOiBudW1iZXIpOiBhbnk7XG5cbiAgYWJzdHJhY3Qgd3JpdGVTdHJpbmcodmFsdWU6IHN0cmluZyk6IGFueTtcblxuICBhYnN0cmFjdCB3cml0ZUJ5dGVzKHZhbHVlOiBVaW50OEFycmF5KTogYW55O1xuXG4gIGFic3RyYWN0IHdyaXRlTnVsbCgpOiBhbnk7XG5cbiAgd3JpdGVBbnkodmFsdWU6IGFueSk6IGFueSB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodmFsdWUpKTtcbiAgfVxuXG4gIHdyaXRlTGlzdChzaXplOiBudW1iZXIsIGhhbmRsZXI6IChpbmRleDogbnVtYmVyLCBpdGVtV3JpdGVyOiBXcml0ZXI8YW55PikgPT4gYW55KTogYW55W10ge1xuICAgIGNvbnN0IHJlc3VsdDogYW55W10gPSBbXTtcbiAgICBmb3IgKGxldCBpbmRleDogbnVtYmVyID0gMDsgaW5kZXggPCBzaXplOyBpbmRleCsrKSB7XG4gICAgICByZXN1bHQucHVzaChoYW5kbGVyKGluZGV4LCB0aGlzKSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICB3cml0ZURvY3VtZW50PEsgZXh0ZW5kcyBzdHJpbmc+KFxuICAgIGtleXM6IEl0ZXJhYmxlPEs+LFxuICAgIGhhbmRsZXI6IChrZXk6IEssIGZpZWxkV3JpdGVyOiBXcml0ZXI8YW55PikgPT4gYW55LFxuICApOiBSZWNvcmQ8SywgYW55PiB7XG4gICAgY29uc3QgcmVzdWx0OiBhbnkgPSB7fTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICByZXN1bHRba2V5XSA9IGhhbmRsZXIoa2V5LCB0aGlzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIGFic3RyYWN0IHdyaXRlTWFwKFxuICAgIHNpemU6IG51bWJlcixcbiAgICBrZXlIYW5kbGVyOiA8S1c+KGluZGV4OiBudW1iZXIsIG1hcEtleVdyaXRlcjogV3JpdGVyPEtXPikgPT4gS1csXG4gICAgdmFsdWVIYW5kbGVyOiA8Vlc+KGluZGV4OiBudW1iZXIsIG1hcFZhbHVlV3JpdGVyOiBXcml0ZXI8Vlc+KSA9PiBWVyxcbiAgKTogYW55O1xufVxuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
