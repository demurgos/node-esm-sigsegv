"use strict";
/**
 * @module kryo/readers/qs
 */
Object.defineProperty(exports, "__esModule", { value: true });
const qs_value_1 = require("./qs-value");
class QsReader {
    constructor(qs, trust, primitiveWrapper = "_") {
        this.qs = qs;
        this.trustInput = trust;
        this.primitiveWrapper = primitiveWrapper;
        this.valueReader = new qs_value_1.QsValueReader(trust);
    }
    readAny(raw, visitor) {
        return this.valueReader.readAny(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readBoolean(raw, visitor) {
        return this.valueReader.readBoolean(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readBytes(raw, visitor) {
        return this.valueReader.readBytes(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readDate(raw, visitor) {
        return this.valueReader.readDate(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readDocument(raw, visitor) {
        return this.valueReader.readDocument(this.qs.parse(raw), visitor);
    }
    readFloat64(raw, visitor) {
        return this.valueReader.readFloat64(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readList(raw, visitor) {
        return this.valueReader.readList(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readMap(raw, visitor) {
        return this.valueReader.readMap(this.qs.parse(raw), visitor);
    }
    readNull(raw, visitor) {
        return this.valueReader.readNull(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readString(raw, visitor) {
        return this.valueReader.readString(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
}
exports.QsReader = QsReader;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvcmVhZGVycy9xcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBSUgseUNBQTJDO0FBRTNDLE1BQWEsUUFBUTtJQVNuQixZQUFZLEVBQWMsRUFBRSxLQUFlLEVBQUUsbUJBQTJCLEdBQUc7UUFDekUsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQztRQUN4QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsZ0JBQWdCLENBQUM7UUFDekMsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLHdCQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELE9BQU8sQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDN0MsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBRUQsV0FBVyxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUNqRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzFGLENBQUM7SUFFRCxTQUFTLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQy9DLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDeEYsQ0FBQztJQUVELFFBQVEsQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDOUMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsWUFBWSxDQUFJLEdBQVEsRUFBRSxPQUF1QjtRQUMvQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFRCxXQUFXLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQ2pELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDMUYsQ0FBQztJQUVELFFBQVEsQ0FBSSxHQUFRLEVBQUUsT0FBdUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsT0FBTyxDQUFJLEdBQVEsRUFBRSxPQUF1QjtRQUMxQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxRQUFRLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQzlDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUVELFVBQVUsQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDaEQsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6RixDQUFDO0NBQ0Y7QUF2REQsNEJBdURDIiwiZmlsZSI6ImxpYi9yZWFkZXJzL3FzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbW9kdWxlIGtyeW8vcmVhZGVycy9xc1xuICovXG5cbmltcG9ydCBfcXMgZnJvbSBcInFzXCI7XG5pbXBvcnQgeyBSZWFkZXIsIFJlYWRWaXNpdG9yIH0gZnJvbSBcIi4uL2NvcmVcIjtcbmltcG9ydCB7IFFzVmFsdWVSZWFkZXIgfSBmcm9tIFwiLi9xcy12YWx1ZVwiO1xuXG5leHBvcnQgY2xhc3MgUXNSZWFkZXIgaW1wbGVtZW50cyBSZWFkZXI8c3RyaW5nPiB7XG4gIHRydXN0SW5wdXQ/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgcXM6IHR5cGVvZiBfcXM7XG5cbiAgcHJpdmF0ZSByZWFkb25seSB2YWx1ZVJlYWRlcjogUXNWYWx1ZVJlYWRlcjtcblxuICBwcml2YXRlIHJlYWRvbmx5IHByaW1pdGl2ZVdyYXBwZXI6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihxczogdHlwZW9mIF9xcywgdHJ1c3Q/OiBib29sZWFuLCBwcmltaXRpdmVXcmFwcGVyOiBzdHJpbmcgPSBcIl9cIikge1xuICAgIHRoaXMucXMgPSBxcztcbiAgICB0aGlzLnRydXN0SW5wdXQgPSB0cnVzdDtcbiAgICB0aGlzLnByaW1pdGl2ZVdyYXBwZXIgPSBwcmltaXRpdmVXcmFwcGVyO1xuICAgIHRoaXMudmFsdWVSZWFkZXIgPSBuZXcgUXNWYWx1ZVJlYWRlcih0cnVzdCk7XG4gIH1cblxuICByZWFkQW55PFI+KHJhdzogc3RyaW5nLCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWRBbnkodGhpcy5xcy5wYXJzZShyYXcpW3RoaXMucHJpbWl0aXZlV3JhcHBlcl0sIHZpc2l0b3IpO1xuICB9XG5cbiAgcmVhZEJvb2xlYW48Uj4ocmF3OiBzdHJpbmcsIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZEJvb2xlYW4odGhpcy5xcy5wYXJzZShyYXcpW3RoaXMucHJpbWl0aXZlV3JhcHBlcl0sIHZpc2l0b3IpO1xuICB9XG5cbiAgcmVhZEJ5dGVzPFI+KHJhdzogc3RyaW5nLCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWRCeXRlcyh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkRGF0ZTxSPihyYXc6IHN0cmluZywgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkRGF0ZSh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkRG9jdW1lbnQ8Uj4ocmF3OiBhbnksIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZERvY3VtZW50KHRoaXMucXMucGFyc2UocmF3KSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkRmxvYXQ2NDxSPihyYXc6IHN0cmluZywgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkRmxvYXQ2NCh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkTGlzdDxSPihyYXc6IGFueSwgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkTGlzdCh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkTWFwPFI+KHJhdzogYW55LCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWRNYXAodGhpcy5xcy5wYXJzZShyYXcpLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWROdWxsPFI+KHJhdzogc3RyaW5nLCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWROdWxsKHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWRTdHJpbmc8Uj4ocmF3OiBzdHJpbmcsIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZFN0cmluZyh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cbn1cbiJdLCJzb3VyY2VSb290IjoiLi4vLi4ifQ==
