/**
 * @module kryo/readers/qs
 */
import { QsValueReader } from "./qs-value";
export class QsReader {
    constructor(qs, trust, primitiveWrapper = "_") {
        this.qs = qs;
        this.trustInput = trust;
        this.primitiveWrapper = primitiveWrapper;
        this.valueReader = new QsValueReader(trust);
    }
    readAny(raw, visitor) {
        return this.valueReader.readAny(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readBoolean(raw, visitor) {
        return this.valueReader.readBoolean(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readBytes(raw, visitor) {
        return this.valueReader.readBytes(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readDate(raw, visitor) {
        return this.valueReader.readDate(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readDocument(raw, visitor) {
        return this.valueReader.readDocument(this.qs.parse(raw), visitor);
    }
    readFloat64(raw, visitor) {
        return this.valueReader.readFloat64(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readList(raw, visitor) {
        return this.valueReader.readList(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readMap(raw, visitor) {
        return this.valueReader.readMap(this.qs.parse(raw), visitor);
    }
    readNull(raw, visitor) {
        return this.valueReader.readNull(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
    readString(raw, visitor) {
        return this.valueReader.readString(this.qs.parse(raw)[this.primitiveWrapper], visitor);
    }
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvcmVhZGVycy9xcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUlILE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFFM0MsTUFBTSxPQUFPLFFBQVE7SUFTbkIsWUFBWSxFQUFjLEVBQUUsS0FBZSxFQUFFLG1CQUEyQixHQUFHO1FBQ3pFLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDO1FBQ2IsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDeEIsSUFBSSxDQUFDLGdCQUFnQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxhQUFhLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELE9BQU8sQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDN0MsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RixDQUFDO0lBRUQsV0FBVyxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUNqRCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQzFGLENBQUM7SUFFRCxTQUFTLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQy9DLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDeEYsQ0FBQztJQUVELFFBQVEsQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDOUMsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsWUFBWSxDQUFJLEdBQVEsRUFBRSxPQUF1QjtRQUMvQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3BFLENBQUM7SUFFRCxXQUFXLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQ2pELE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDMUYsQ0FBQztJQUVELFFBQVEsQ0FBSSxHQUFRLEVBQUUsT0FBdUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsT0FBTyxDQUFJLEdBQVEsRUFBRSxPQUF1QjtRQUMxQyxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQy9ELENBQUM7SUFFRCxRQUFRLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQzlDLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDdkYsQ0FBQztJQUVELFVBQVUsQ0FBSSxHQUFXLEVBQUUsT0FBdUI7UUFDaEQsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN6RixDQUFDO0NBQ0YiLCJmaWxlIjoibGliL3JlYWRlcnMvcXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBtb2R1bGUga3J5by9yZWFkZXJzL3FzXG4gKi9cblxuaW1wb3J0IF9xcyBmcm9tIFwicXNcIjtcbmltcG9ydCB7IFJlYWRlciwgUmVhZFZpc2l0b3IgfSBmcm9tIFwiLi4vY29yZVwiO1xuaW1wb3J0IHsgUXNWYWx1ZVJlYWRlciB9IGZyb20gXCIuL3FzLXZhbHVlXCI7XG5cbmV4cG9ydCBjbGFzcyBRc1JlYWRlciBpbXBsZW1lbnRzIFJlYWRlcjxzdHJpbmc+IHtcbiAgdHJ1c3RJbnB1dD86IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG5cbiAgcHJpdmF0ZSByZWFkb25seSBxczogdHlwZW9mIF9xcztcblxuICBwcml2YXRlIHJlYWRvbmx5IHZhbHVlUmVhZGVyOiBRc1ZhbHVlUmVhZGVyO1xuXG4gIHByaXZhdGUgcmVhZG9ubHkgcHJpbWl0aXZlV3JhcHBlcjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHFzOiB0eXBlb2YgX3FzLCB0cnVzdD86IGJvb2xlYW4sIHByaW1pdGl2ZVdyYXBwZXI6IHN0cmluZyA9IFwiX1wiKSB7XG4gICAgdGhpcy5xcyA9IHFzO1xuICAgIHRoaXMudHJ1c3RJbnB1dCA9IHRydXN0O1xuICAgIHRoaXMucHJpbWl0aXZlV3JhcHBlciA9IHByaW1pdGl2ZVdyYXBwZXI7XG4gICAgdGhpcy52YWx1ZVJlYWRlciA9IG5ldyBRc1ZhbHVlUmVhZGVyKHRydXN0KTtcbiAgfVxuXG4gIHJlYWRBbnk8Uj4ocmF3OiBzdHJpbmcsIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZEFueSh0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkQm9vbGVhbjxSPihyYXc6IHN0cmluZywgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkQm9vbGVhbih0aGlzLnFzLnBhcnNlKHJhdylbdGhpcy5wcmltaXRpdmVXcmFwcGVyXSwgdmlzaXRvcik7XG4gIH1cblxuICByZWFkQnl0ZXM8Uj4ocmF3OiBzdHJpbmcsIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZEJ5dGVzKHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWREYXRlPFI+KHJhdzogc3RyaW5nLCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWREYXRlKHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWREb2N1bWVudDxSPihyYXc6IGFueSwgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkRG9jdW1lbnQodGhpcy5xcy5wYXJzZShyYXcpLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWRGbG9hdDY0PFI+KHJhdzogc3RyaW5nLCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWRGbG9hdDY0KHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWRMaXN0PFI+KHJhdzogYW55LCB2aXNpdG9yOiBSZWFkVmlzaXRvcjxSPik6IFIge1xuICAgIHJldHVybiB0aGlzLnZhbHVlUmVhZGVyLnJlYWRMaXN0KHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxuXG4gIHJlYWRNYXA8Uj4ocmF3OiBhbnksIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZE1hcCh0aGlzLnFzLnBhcnNlKHJhdyksIHZpc2l0b3IpO1xuICB9XG5cbiAgcmVhZE51bGw8Uj4ocmF3OiBzdHJpbmcsIHZpc2l0b3I6IFJlYWRWaXNpdG9yPFI+KTogUiB7XG4gICAgcmV0dXJuIHRoaXMudmFsdWVSZWFkZXIucmVhZE51bGwodGhpcy5xcy5wYXJzZShyYXcpW3RoaXMucHJpbWl0aXZlV3JhcHBlcl0sIHZpc2l0b3IpO1xuICB9XG5cbiAgcmVhZFN0cmluZzxSPihyYXc6IHN0cmluZywgdmlzaXRvcjogUmVhZFZpc2l0b3I8Uj4pOiBSIHtcbiAgICByZXR1cm4gdGhpcy52YWx1ZVJlYWRlci5yZWFkU3RyaW5nKHRoaXMucXMucGFyc2UocmF3KVt0aGlzLnByaW1pdGl2ZVdyYXBwZXJdLCB2aXNpdG9yKTtcbiAgfVxufVxuIl0sInNvdXJjZVJvb3QiOiIuLi8uLiJ9
